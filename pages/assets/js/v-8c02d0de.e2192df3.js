"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[4297],{9013:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-8c02d0de",path:"/front-end/",title:"前端技术总结",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Modules",slug:"modules",children:[]},{level:2,title:"Webpack中的模块",slug:"webpack中的模块",children:[]}],filePathRelative:"front-end/README.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},76600:(n,a,s)=>{s.r(a),s.d(a,{default:()=>N});var e=s(66252);const p=(0,e.uE)('<h1 id="前端技术总结" tabindex="-1"><a class="header-anchor" href="#前端技术总结" aria-hidden="true">#</a> 前端技术总结</h1><p>https://risingstars.js.org/2018/en/#section-compiler</p><p>jquery <code>$.each()</code>与<code>$().each</code>的区别？</p><p><code>$().each</code>在dom上处理的比较多</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=&#39;propertyName&#39;]&quot;</span><span class="token punctuation">,</span> $importModal<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n       array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n   <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>遍历一个数组通常用<code>$.each()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> $list <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#promotion-reduce .promotion-reduce-group&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>$list<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> gift</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> kvs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;.form-control&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>kvs<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> val <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>val <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            hasNull <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>区别：</p><p>开源后台空值面板</p>',9),t={href:"https://github.com/almasaeed2010/AdminLTE",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("AdminLTE"),l=(0,e._)("ul",null,[(0,e._)("li",null,"Bootstrap 3.x")],-1),c={href:"https://github.com/PanJiaChen/vue-element-admin",target:"_blank",rel:"noopener noreferrer"},r=(0,e.Uk)("vue-Element-Admin"),u=(0,e._)("ul",null,[(0,e._)("li",null,"vue2.0")],-1),i={href:"https://github.com/tabler/tabler",target:"_blank",rel:"noopener noreferrer"},k=(0,e.Uk)("tabler"),d=(0,e._)("ul",null,[(0,e._)("li",null,"BootStrap 4")],-1),b={href:"https://github.com/puikinsh/gentelella",target:"_blank",rel:"noopener noreferrer"},m=(0,e.Uk)("Gentelella"),h=(0,e._)("ul",null,[(0,e._)("li",null,"Bootstarp")],-1),f={href:"https://github.com/akveo/ngx-admin",target:"_blank",rel:"noopener noreferrer"},g=(0,e.Uk)("ng2-admin"),_=(0,e._)("ul",null,[(0,e._)("li",null,"Angular 2"),(0,e._)("li",null,"Bootstrap 4"),(0,e._)("li",null,"Webpack")],-1),v={href:"https://github.com/ant-design/ant-design-pro",target:"_blank",rel:"noopener noreferrer"},w=(0,e.Uk)("ant-design-pro"),y={href:"https://github.com/akveo/blur-admin",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("blur-admin"),$={href:"https://github.com/vue-bulma/vue-admin",target:"_blank",rel:"noopener noreferrer"},U=(0,e.Uk)("vue-admin"),x={href:"https://github.com/iview/iview-admin",target:"_blank",rel:"noopener noreferrer"},j=(0,e.Uk)("iview-admin"),q={href:"https://github.com/creativetimofficial/material-dashboard",target:"_blank",rel:"noopener noreferrer"},E=(0,e.Uk)("material-dashboard"),J={href:"https://github.com/bopoda/ace",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("Ace admin"),M=(0,e.uE)('<p>https://medium.com/front-end-weekly/what-are-npm-yarn-babel-and-webpack-and-how-to-properly-use-them-d835a758f987</p><p>现代前端插件安装方式一般有两种</p><ol><li>模块打包方式，比如webpack，先通过npm安装</li><li>JavaScript标签包含的方式 including it in a script tag</li></ol><p>现代JavaScript <code>Modern Javascript</code> 从简单的HTML和JS转向<code>包管理器(package manager)</code>，来下载第三方依赖。使用模块打包器<code>module bundler</code>来创建单个脚本</p><p>module bundler such as Webpack Browserify and so on</p><p><code>包管理器</code>:yarn and npm <code>模块打包工具</code>:webpack and browserfiy</p><p><code>现代Javascript</code>应用程序</p><p>模块的概念，JavaScript的模块，webpack中的模块</p><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h2><p><code>模块化编程</code>，即开发者将程序分解成<code>离散功能块</code>，称之为模块。</p><h2 id="webpack中的模块" tabindex="-1"><a class="header-anchor" href="#webpack中的模块" aria-hidden="true">#</a> Webpack中的模块</h2><p>Which package manager would you like to use?</p><ul><li>yarn</li><li>npm</li></ul><p>Which is better ?</p><p><code>Webpack</code> or <code>Gulp</code> or <code>Grunt</code></p>',15),B={},N=(0,s(83744).Z)(B,[["render",function(n,a){const s=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",t,[o,(0,e.Wm)(s)]),l]),(0,e._)("li",null,[(0,e._)("a",c,[r,(0,e.Wm)(s)]),u]),(0,e._)("li",null,[(0,e._)("a",i,[k,(0,e.Wm)(s)]),d]),(0,e._)("li",null,[(0,e._)("a",b,[m,(0,e.Wm)(s)]),h]),(0,e._)("li",null,[(0,e._)("a",f,[g,(0,e.Wm)(s)]),_]),(0,e._)("li",null,[(0,e._)("a",v,[w,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",y,[W,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",$,[U,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",x,[j,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",q,[E,(0,e.Wm)(s)])]),(0,e._)("li",null,[(0,e._)("a",J,[A,(0,e.Wm)(s)])])]),M],64)}]])},83744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);