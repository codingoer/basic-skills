"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7008],{93353:(e,s,n)=>{n.r(s),n.d(s,{data:()=>a});const a={key:"v-77b5c48a",path:"/tools/github-authenticating.html",title:"Authenticating to GitHub",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"Connecting to GitHub with SSH",slug:"connecting-to-github-with-ssh",children:[{level:3,title:"创建SSH",slug:"创建ssh",children:[]},{level:3,title:"将SSH Key添加到ssh-agent",slug:"将ssh-key添加到ssh-agent",children:[]},{level:3,title:"测试SSH连接",slug:"测试ssh连接",children:[]}]},{level:2,title:"Troubleshooting commit signature verification",slug:"troubleshooting-commit-signature-verification",children:[{level:3,title:"提交代码后GitHub没有统计",slug:"提交代码后github没有统计",children:[]}]}],filePathRelative:"tools/github-authenticating.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},3191:(e,s,n)=>{n.r(s),n.d(s,{default:()=>p});var a=n(66252);const i=(0,a._)("h1",{id:"authenticating-to-github",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#authenticating-to-github","aria-hidden":"true"},"#"),(0,a.Uk)(" Authenticating to GitHub")],-1),t={href:"https://docs.github.com/en/github/authenticating-to-github",target:"_blank",rel:"noopener noreferrer"},l=(0,a.Uk)("官方文档地址"),r=(0,a._)("h2",{id:"connecting-to-github-with-ssh",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#connecting-to-github-with-ssh","aria-hidden":"true"},"#"),(0,a.Uk)(" Connecting to GitHub with SSH")],-1),o={href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh",target:"_blank",rel:"noopener noreferrer"},c=(0,a.Uk)("官方文档地址"),u=(0,a.uE)('<h3 id="创建ssh" tabindex="-1"><a class="header-anchor" href="#创建ssh" aria-hidden="true">#</a> 创建SSH</h3><ol><li>检查已经存在的SSH Key</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> -al ~/.ssh\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>检查路径列表下是否已经存在一个公共的SSH Key</li></ol><ul><li>如果你没有存在的公私秘钥对，或者你不希望使用已存在的去连接GitHub，你可以生成一个新的SSH Key.</li><li>如果你看到了已经存在的公私秘钥对，并且你也想使用它们去连接GitHub，你可以将你的SSH Key导入到ssh-agent中。</li></ul><ol start="3"><li>创建一个新的SSH Key</li></ol><p>复制如下代码，并将邮箱替换成你的GitHub Email</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-keygen -t rsa -b <span class="token number">4096</span> -C <span class="token string">&quot;your_email@example.com&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>这将会使用你提供的email作为标签，创建一个新的SSH Key</p><ol start="4"><li>当你确认“输入文件保存key”，按回车键。将会保存到默认的地址，也可以自定义保存地址：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>/C/User/Lionel/.github/id_rsa\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="5"><li>在确认的时候输入一个安全口令。</li></ol><h3 id="将ssh-key添加到ssh-agent" tabindex="-1"><a class="header-anchor" href="#将ssh-key添加到ssh-agent" aria-hidden="true">#</a> 将SSH Key添加到ssh-agent</h3><ol><li>确保ssh-agent正在运行</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">eval</span> <span class="token variable"><span class="token variable">$(</span>ssh-agent -s<span class="token variable">)</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>输出：Agent pid 432</p><ol start="2"><li>添加你的SSH私钥到ssh-agent，输入之前设置的安全口令</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-add ~/.github/id_rsa\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>检查你的私钥添加到ssh-agent：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ssh-add -l\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>添加SSH Key到你的Github账户</li></ol><h3 id="测试ssh连接" tabindex="-1"><a class="header-anchor" href="#测试ssh连接" aria-hidden="true">#</a> 测试SSH连接</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ssh</span> -T git@github.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="troubleshooting-commit-signature-verification" tabindex="-1"><a class="header-anchor" href="#troubleshooting-commit-signature-verification" aria-hidden="true">#</a> Troubleshooting commit signature verification</h2>',24),h={href:"https://docs.github.com/en/github/authenticating-to-github/troubleshooting-commit-signature-verification",target:"_blank",rel:"noopener noreferrer"},d=(0,a.Uk)("文档地址"),g=(0,a.uE)('<h3 id="提交代码后github没有统计" tabindex="-1"><a class="header-anchor" href="#提交代码后github没有统计" aria-hidden="true">#</a> 提交代码后GitHub没有统计</h3><p><strong>配置的用户名和邮箱不匹配</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> config user.name <span class="token string">&quot;Lionel&quot;</span>\n<span class="token function">git</span> config user.email <span class="token string">&quot;lionel217920@163.com&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol><li>Rebase之前的提交记录</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> rebase -i HEAD~8\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>需要修改某一次的提交</li></ol><p>切换至英文输入法, 按下i字母, 即可进入编辑模式, 此时用光标定位到需要修改的那一条记录, <strong>将pick修改成edit</strong></p><ol start="3"><li>重置用户信息</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> commit --amend --reset-author\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="4"><li>继续Rebase</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> rebase --continue\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>当出现 <strong>Successfully rebased and updated refs/heads/master.</strong> 结束</p><ol start="5"><li>强推到master</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> push origin master --force\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',14),b={},p=(0,n(83744).Z)(b,[["render",function(e,s){const n=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[i,(0,a._)("p",null,[(0,a._)("a",t,[l,(0,a.Wm)(n)])]),r,(0,a._)("p",null,[(0,a._)("a",o,[c,(0,a.Wm)(n)])]),u,(0,a._)("p",null,[(0,a._)("a",h,[d,(0,a.Wm)(n)])]),g],64)}]])},83744:(e,s)=>{s.Z=(e,s)=>{const n=e.__vccOpts||e;for(const[e,a]of s)n[e]=a;return n}}}]);