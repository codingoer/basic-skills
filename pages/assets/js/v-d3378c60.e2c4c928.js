"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[881],{23189:(a,n,s)=>{s.r(n),s.d(n,{data:()=>e});const e={key:"v-d3378c60",path:"/front-end/javascript/RERADME.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"JavaScript关键字",slug:"javascript关键字",children:[]},{level:2,title:"Modern Javascript",slug:"modern-javascript",children:[]},{level:2,title:"Javascript全局对象",slug:"javascript全局对象",children:[{level:3,title:"全局函数",slug:"全局函数",children:[]}]}],filePathRelative:"front-end/javascript/RERADME.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},67177:(a,n,s)=>{s.r(n),s.d(n,{default:()=>p});const e=(0,s(66252).uE)('<p>ECMAScript是标准，而JavaScript是实现</p><p>精通原生js开发，有基于原型和对象模式开发经验 熟练使用es6开发</p><h2 id="javascript关键字" tabindex="-1"><a class="header-anchor" href="#javascript关键字" aria-hidden="true">#</a> JavaScript关键字</h2><blockquote><p>typeof</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;undefined&quot;</span> <span class="token operator">===</span> <span class="token keyword">typeof</span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token operator">...</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>$option<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="modern-javascript" tabindex="-1"><a class="header-anchor" href="#modern-javascript" aria-hidden="true">#</a> Modern Javascript</h2><p>What&#39;s the difference between Javascript and ECMAScript ? Javascript VA ES6</p><p>What&#39;s the difference between CommonJS and AMD</p><p>https://medium.freecodecamp.org/whats-the-difference-between-javascript-and-ecmascript-cba48c73a2b5</p><h2 id="javascript全局对象" tabindex="-1"><a class="header-anchor" href="#javascript全局对象" aria-hidden="true">#</a> Javascript全局对象</h2><h3 id="全局函数" tabindex="-1"><a class="header-anchor" href="#全局函数" aria-hidden="true">#</a> 全局函数</h3><p>isNaN() 检查某个值是否是数字。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>val <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>只能判断数字，不能判断字符串</p></div>',14),t={},p=(0,s(83744).Z)(t,[["render",function(a,n){return e}]])},83744:(a,n)=>{n.Z=(a,n)=>{const s=a.__vccOpts||a;for(const[a,e]of n)s[a]=e;return s}}}]);