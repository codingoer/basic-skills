"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7022],{3013:(e,a,o)=>{o.r(a),o.d(a,{data:()=>l});const l={key:"v-16722c46",path:"/java/collection/",title:"Java Collections Framework",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"What is a Collections Framework",slug:"what-is-a-collections-framework",children:[]},{level:2,title:"Collections Framework Category",slug:"collections-framework-category",children:[]},{level:2,title:"Collections Framework Interface",slug:"collections-framework-interface",children:[]}],filePathRelative:"java/collection/README.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},29292:(e,a,o)=>{o.r(a),o.d(a,{default:()=>k});var l=o(66252);const t=(0,l.uE)('<h1 id="java-collections-framework" tabindex="-1"><a class="header-anchor" href="#java-collections-framework" aria-hidden="true">#</a> Java Collections Framework</h1><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>这里介绍的Java集合框架都是基于JDK8</p></div><h2 id="what-is-a-collections-framework" tabindex="-1"><a class="header-anchor" href="#what-is-a-collections-framework" aria-hidden="true">#</a> What is a Collections Framework</h2><p>::: theorem Java集合框架定义 A collection - 通常又称之为容器 - 只是一个将多个元素聚合成一个单元的对象。Collections被用来存储，检索，操作数据。通常情况下，他们代表所代表的数据项形成了一个自然的组。</p>',4),r=(0,l.Uk)("::: right From "),i={href:"https://docs.oracle.com/javase/tutorial/collections/intro/index.html",target:"_blank",rel:"noopener noreferrer"},n=(0,l.Uk)("Java Tutorials"),c=(0,l.Uk)(" :::"),s=(0,l.uE)('<p>数据结构可以粗略的对应于Java中的容器类</p><p>集合框架是一个统一的用来表示和操作集合的体系结构，所有的集合框架都包含以下几个部分：</p><ul><li><strong>Interfaces</strong>（接口）：这些都是抽象数据类型来表述集合，在面向对象中，接口通常形成一个层次结构。</li><li><strong>Implementations</strong>（实现）：这些都是接口的具体实现，本质上，他们是可重用的数据结构。</li><li><strong>Algorithms</strong>（算法）：算法是多态的，也就是说相同的方法可以在不同的接口实现中使用，本质上，算法是可重复使用的功能。</li></ul><h2 id="collections-framework-category" tabindex="-1"><a class="header-anchor" href="#collections-framework-category" aria-hidden="true">#</a> Collections Framework Category</h2><p>Java集合框架可以分为两大类：一类是实现Collection接口；另一类是实现Map接口</p><ul><li><p>Collection是一个基本的集合接口</p></li><li><p>Map没有继承Collection接口，与Collection是并列关系</p></li></ul><h2 id="collections-framework-interface" tabindex="-1"><a class="header-anchor" href="#collections-framework-interface" aria-hidden="true">#</a> Collections Framework Interface</h2>',7),h=(0,l.Uk)("::: theorem Java集合框架接口 💙核心接口就是Java集合框架的灵魂所在💜 ::: right From "),m={href:"https://docs.oracle.com/javase/tutorial/collections/index.html",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Uk)("Java Tutorials"),p=(0,l.Uk)(" :::"),u=(0,l.uE)('<p>核心集合接口封装不同类型的集合，核心集合接口是Java集合框架的基础。</p><p>核心接口集合组成一个<strong>层次结构</strong>:</p><p><img src="https://image.hualihai.cn/blog/20f01c7916d04a20a204b1cc3e49283f" alt="Collection Interface"></p><ul><li>Collection - 集合的根层次</li><li>Set - 不能包含重复元素的集合</li><li>List - 有序的集合</li><li>Queue - 队列</li><li>Deque - 双端队列</li><li>Map - 一个将建映射到值的对象，一个Map不能含有重复的Key值</li></ul>',4),f={},k=(0,o(83744).Z)(f,[["render",function(e,a){const o=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[t,(0,l._)("p",null,[r,(0,l._)("a",i,[n,(0,l.Wm)(o)]),c]),s,(0,l._)("p",null,[h,(0,l._)("a",m,[d,(0,l.Wm)(o)]),p]),u],64)}]])},83744:(e,a)=>{a.Z=(e,a)=>{const o=e.__vccOpts||e;for(const[e,l]of a)o[e]=l;return o}}}]);