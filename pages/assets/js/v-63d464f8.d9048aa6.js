"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2311],{5175:(a,e,r)=>{r.r(e),r.d(e,{data:()=>s});const s={key:"v-63d464f8",path:"/java/dynamic/class-load-process.html",title:"Java类加载机制",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"类加载过程",slug:"类加载过程",children:[]},{level:2,title:"双亲委派模型",slug:"双亲委派模型",children:[]},{level:2,title:"ClassLoader",slug:"classloader",children:[]},{level:2,title:"自定义ClassLoader",slug:"自定义classloader",children:[]}],filePathRelative:"java/dynamic/class-load-process.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},23564:(a,e,r)=>{r.r(e),r.d(e,{default:()=>l});const s=(0,r(66252).uE)('<h1 id="java类加载机制" tabindex="-1"><a class="header-anchor" href="#java类加载机制" aria-hidden="true">#</a> Java类加载机制</h1><h2 id="类加载过程" tabindex="-1"><a class="header-anchor" href="#类加载过程" aria-hidden="true">#</a> 类加载过程</h2><p><strong>Java的类加载过程分为三个主要步骤：加载，链接，初始化。</strong></p><h2 id="双亲委派模型" tabindex="-1"><a class="header-anchor" href="#双亲委派模型" aria-hidden="true">#</a> 双亲委派模型</h2><h2 id="classloader" tabindex="-1"><a class="header-anchor" href="#classloader" aria-hidden="true">#</a> ClassLoader</h2><h2 id="自定义classloader" tabindex="-1"><a class="header-anchor" href="#自定义classloader" aria-hidden="true">#</a> 自定义ClassLoader</h2>',6),d={},l=(0,r(83744).Z)(d,[["render",function(a,e){return s}]])},83744:(a,e)=>{e.Z=(a,e)=>{const r=a.__vccOpts||a;for(const[a,s]of e)r[a]=s;return r}}}]);