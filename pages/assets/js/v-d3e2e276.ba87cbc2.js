"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[8745],{9015:(t,e,p)=>{p.r(e),p.d(e,{data:()=>n});const n={key:"v-d3e2e276",path:"/networking/http/",title:"Http协议",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"networking/http/README.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},23670:(t,e,p)=>{p.r(e),p.d(e,{default:()=>a});const n=(0,p(66252).uE)('<h1 id="http协议" tabindex="-1"><a class="header-anchor" href="#http协议" aria-hidden="true">#</a> Http协议</h1><p>403代表什么</p><p>在同一个tcp的连接中可以传送多个HTTP请求和响应.</p><p>建立Tcp连接的过程</p><p>Http/1.1持久连接的概念</p><p>Http/1.0和http/1.1的区别？？</p><p>TLS或SSL协议层之上</p><p>服务器上客户端设置Cookie</p><p>HTTP的长连接和短连接本质上是TCP长连接和短连接。</p><p>在HTTP/1.0中，默认使用的是短连接。也就是说，浏览器和服务器每进行一次HTTP操作，就建立一次连接，但任务结束就中断连接。如果客户端浏览器访问的某个HTML或其他类型的 Web页中包含有其他的Web资源，如JavaScript文件、图像文件、CSS文件等；当浏览器每遇到这样一个Web资源，就会建立一个HTTP会话。</p><p>但从 HTTP/1.1起，默认使用长连接，用以保持连接特性。使用长连接的HTTP协议，会在响应头有加入这行代码：</p><p>Connection:keep-alive 在使用长连接的情况下，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的 TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接。Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间。实现长连接要客户端和服务端都支持长连接。</p>',12),o={},a=(0,p(83744).Z)(o,[["render",function(t,e){return n}]])},83744:(t,e)=>{e.Z=(t,e)=>{const p=t.__vccOpts||t;for(const[t,n]of e)p[t]=n;return p}}}]);