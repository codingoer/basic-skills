"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2101],{31749:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-37ebd8f6",path:"/specification/boolean.html",title:"布尔类型用作属性时的注意事项",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"specification/boolean.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},34806:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const p=(0,a(66252).uE)('<h1 id="布尔类型用作属性时的注意事项" tabindex="-1"><a class="header-anchor" href="#布尔类型用作属性时的注意事项" aria-hidden="true">#</a> 布尔类型用作属性时的注意事项</h1><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StudentModule</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">2337227050828958671L</span><span class="token punctuation">;</span>\n    \n    <span class="token keyword">private</span> <span class="token keyword">boolean</span> isVip<span class="token punctuation">;</span>\n    \n    <span class="token keyword">private</span> <span class="token keyword">boolean</span> vip<span class="token punctuation">;</span>\n    \n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> isMan<span class="token punctuation">;</span>\n    \n    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> man<span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isVip</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> isVip<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVip</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> vip<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        isVip <span class="token operator">=</span> vip<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">getMan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> isMan<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setMan</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span> man<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        isMan <span class="token operator">=</span> man<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>',2),e={},o=(0,a(83744).Z)(e,[["render",function(n,s){return p}]])},83744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);