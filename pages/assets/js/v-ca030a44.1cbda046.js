"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[4837],{89994:(e,a,i)=>{i.r(a),i.d(a,{data:()=>l});const l={key:"v-ca030a44",path:"/data-structure/linear-list/sequence-list.html",title:"顺序表",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"顺序表的存储结构",slug:"顺序表的存储结构",children:[]},{level:2,title:"顺序表的特点",slug:"顺序表的特点",children:[]},{level:2,title:"顺序表的操作",slug:"顺序表的操作",children:[]}],filePathRelative:"data-structure/linear-list/sequence-list.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},16525:(e,a,i)=>{i.r(a),i.d(a,{default:()=>r});const l=(0,i(66252).uE)('<h1 id="顺序表" tabindex="-1"><a class="header-anchor" href="#顺序表" aria-hidden="true">#</a> 顺序表</h1><h2 id="顺序表的存储结构" tabindex="-1"><a class="header-anchor" href="#顺序表的存储结构" aria-hidden="true">#</a> 顺序表的存储结构</h2><p>线性表的顺序存储结构：把线性表中的所有元素按照顺序存储方法进行存储，也就是，按照逻辑顺序依次存储到存储器中的一片连续的存储空间。</p><p><img src="https://image.hualihai.cn/blog/a7bd21c681d34453903b1cd3a65819bf" alt="存储逻辑"></p><h2 id="顺序表的特点" tabindex="-1"><a class="header-anchor" href="#顺序表的特点" aria-hidden="true">#</a> 顺序表的特点</h2><ul><li>元素类型相同</li><li>元素顺序地存储在连续存储空间中，每一个元素有唯一的索引值</li><li>读写其元素很方便 ，通过下标即可指定位置</li><li>逻辑上相邻，物理上也相邻</li><li>存储密度为1</li></ul><h2 id="顺序表的操作" tabindex="-1"><a class="header-anchor" href="#顺序表的操作" aria-hidden="true">#</a> 顺序表的操作</h2><ul><li>插入元素</li></ul><p>平均复杂度为O(n)</p><ul><li>删除元素</li></ul><p>平均复杂度为O(n)</p>',11),t={},r=(0,i(83744).Z)(t,[["render",function(e,a){return l}]])},83744:(e,a)=>{a.Z=(e,a)=>{const i=e.__vccOpts||e;for(const[e,l]of a)i[e]=l;return i}}}]);