"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[5951],{38113:(e,n,a)=>{a.r(n),a.d(n,{data:()=>t});const t={key:"v-2d1e6e2f",path:"/database/mongodb/indexes/index-ttl.html",title:"TTL indexes",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"实现原理，mongo是如何实现自动删除的",slug:"实现原理-mongo是如何实现自动删除的",children:[]},{level:2,title:"创建TTL索引",slug:"创建ttl索引",children:[]}],filePathRelative:"database/mongodb/indexes/index-ttl.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},55157:(e,n,a)=>{a.r(n),a.d(n,{default:()=>o});const t=(0,a(66252).uE)('<h1 id="ttl-indexes" tabindex="-1"><a class="header-anchor" href="#ttl-indexes" aria-hidden="true">#</a> TTL indexes</h1><p>https://blog.csdn.net/jianlong727/article/details/54631124</p><p>TTL indexes 是特殊的单一属性索引。</p><p>automatically remove documents from a collection after a certain amount of time or at a specific clock time。</p><p>可以自动的从集合中移除文档，在一定数量时间之后或者在一个特定的时间点。</p><h2 id="实现原理-mongo是如何实现自动删除的" tabindex="-1"><a class="header-anchor" href="#实现原理-mongo是如何实现自动删除的" aria-hidden="true">#</a> 实现原理，mongo是如何实现自动删除的</h2><p>据说是后台有个单线程，一直查询</p><h2 id="创建ttl索引" tabindex="-1"><a class="header-anchor" href="#创建ttl索引" aria-hidden="true">#</a> 创建TTL索引</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>db.autoCrawlResult.createIndex<span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string">&quot;createdTime&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>, <span class="token punctuation">{</span> expireAfterSeconds: <span class="token number">3600</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',9),s={},o=(0,a(83744).Z)(s,[["render",function(e,n){return t}]])},83744:(e,n)=>{n.Z=(e,n)=>{const a=e.__vccOpts||e;for(const[e,t]of n)a[e]=t;return a}}}]);