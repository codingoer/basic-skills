"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[9738],{64331:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-4520f4a8",path:"/front-end/webpack/configuration/",title:"配置webpack",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"使用不同的配置文件",slug:"使用不同的配置文件",children:[]},{level:2,title:"快速生成webpack.config.js",slug:"快速生成webpack-config-js",children:[]},{level:2,title:"webpack.config.js详解",slug:"webpack-config-js详解",children:[]}],filePathRelative:"front-end/webpack/configuration/README.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},48553:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(66252);const p=(0,e.uE)('<h1 id="配置webpack" tabindex="-1"><a class="header-anchor" href="#配置webpack" aria-hidden="true">#</a> 配置webpack</h1><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>webpack可以不使用配置文件.</p></div><p>如果不使用配置文件，默认情况下认为入口文件在项目的<code>src/index</code>目录中，输出结果在<code>dist/main.js</code>文件中。</p><p>通常情况下，我们的项目需要一些配置，所以在项目<code>根目录</code>创建<code>webpack.config.js</code>文件用于一些自定义配置。webpack会自动找到这个配置文件。</p><h2 id="使用不同的配置文件" tabindex="-1"><a class="header-anchor" href="#使用不同的配置文件" aria-hidden="true">#</a> 使用不同的配置文件</h2><p>在<code>package.json</code>中指定配置文件</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;webpack --config prod.config.js&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="快速生成webpack-config-js" tabindex="-1"><a class="header-anchor" href="#快速生成webpack-config-js" aria-hidden="true">#</a> 快速生成webpack.config.js</h2>',8),t={href:"https://generatewebpackconfig.netlify.com/",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Uk)("在线工具"),o=(0,e.uE)('<p>或者使用webpack自带的<code>cli</code>命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>npx webpack-cli init\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="webpack-config-js详解" tabindex="-1"><a class="header-anchor" href="#webpack-config-js详解" aria-hidden="true">#</a> webpack.config.js详解</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">&#39;./src/index.js&#39;</span><span class="token punctuation">,</span>\n  output<span class="token operator">:</span> <span class="token punctuation">{</span>\n    filename<span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span>\n    path<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;style-loader&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;css-loader&#39;</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>',4),l={},r=(0,a(83744).Z)(l,[["render",function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[p,(0,e._)("p",null,[(0,e._)("a",t,[c,(0,e.Wm)(a)])]),o],64)}]])},83744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);