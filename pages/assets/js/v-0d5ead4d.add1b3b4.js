"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7894],{8272:(e,l,i)=>{i.r(l),i.d(l,{data:()=>a});const a={key:"v-0d5ead4d",path:"/data-structure/linear-list/sequence-vs-linked.html",title:"顺序表与链表的比较",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"顺序表优缺点",slug:"顺序表优缺点",children:[{level:3,title:"顺序表的优点",slug:"顺序表的优点",children:[]},{level:3,title:"顺序表的缺点",slug:"顺序表的缺点",children:[]}]},{level:2,title:"链表优缺点",slug:"链表优缺点",children:[{level:3,title:"链表的优点",slug:"链表的优点",children:[]},{level:3,title:"链表的缺点",slug:"链表的缺点",children:[]}]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"data-structure/linear-list/sequence-vs-linked.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},81565:(e,l,i)=>{i.r(l),i.d(l,{default:()=>t});const a=(0,i(66252).uE)('<h1 id="顺序表与链表的比较" tabindex="-1"><a class="header-anchor" href="#顺序表与链表的比较" aria-hidden="true">#</a> 顺序表与链表的比较</h1><h2 id="顺序表优缺点" tabindex="-1"><a class="header-anchor" href="#顺序表优缺点" aria-hidden="true">#</a> 顺序表优缺点</h2><h3 id="顺序表的优点" tabindex="-1"><a class="header-anchor" href="#顺序表的优点" aria-hidden="true">#</a> 顺序表的优点</h3><ul><li>没有使用指针，不用花费额外开销</li><li>线性表元素的读访问非常简洁便利</li></ul><h3 id="顺序表的缺点" tabindex="-1"><a class="header-anchor" href="#顺序表的缺点" aria-hidden="true">#</a> 顺序表的缺点</h3><ul><li>预先申请固定长度的连续空间</li><li>插入、删除运算时间代价 O(n)</li></ul><h2 id="链表优缺点" tabindex="-1"><a class="header-anchor" href="#链表优缺点" aria-hidden="true">#</a> 链表优缺点</h2><h3 id="链表的优点" tabindex="-1"><a class="header-anchor" href="#链表的优点" aria-hidden="true">#</a> 链表的优点</h3><ul><li>无需事先了解线性表的长度</li><li>允许线性表的长度动态变化</li><li>能够适应经常插入删除内部元素的情况</li></ul><h3 id="链表的缺点" tabindex="-1"><a class="header-anchor" href="#链表的缺点" aria-hidden="true">#</a> 链表的缺点</h3><ul><li>存储利用指针，动态地按照需要为表中新的元素分配存储空间</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>顺序表是存储静态数据的不二选择</li><li>链表是存储动态变化数据的良方</li></ul><p>顺序表</p><ul><li>结点总数目大概可以估计</li><li>线性表中结点比较稳定（插入删除少）</li></ul><p>链表</p><ul><li>结点数目无法预知</li><li>线性表中结点动态变化（插入删除多）</li></ul>',17),r={},t=(0,i(83744).Z)(r,[["render",function(e,l){return a}]])},83744:(e,l)=>{l.Z=(e,l)=>{const i=e.__vccOpts||e;for(const[e,a]of l)i[e]=a;return i}}}]);