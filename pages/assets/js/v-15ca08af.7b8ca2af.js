"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7083],{89981:(e,l,a)=>{a.r(l),a.d(l,{data:()=>i});const i={key:"v-15ca08af",path:"/data-structure/linear-list/",title:"线性表 - Linear List",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"线性表的概念",slug:"线性表的概念",children:[]},{level:2,title:"线性表的逻辑结构",slug:"线性表的逻辑结构",children:[]},{level:2,title:"线性表的特点",slug:"线性表的特点",children:[]},{level:2,title:"线性表的分类",slug:"线性表的分类",children:[]}],filePathRelative:"data-structure/linear-list/README.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},1170:(e,l,a)=>{a.r(l),a.d(l,{default:()=>f});var i=a(66252);const r=(0,i.uE)('<h1 id="线性表-linear-list" tabindex="-1"><a class="header-anchor" href="#线性表-linear-list" aria-hidden="true">#</a> 线性表 - Linear List</h1><h2 id="线性表的概念" tabindex="-1"><a class="header-anchor" href="#线性表的概念" aria-hidden="true">#</a> 线性表的概念</h2><p>线性表 - Linear List: 由同类数据元素构成有序序列的线性结构。</p><p>::: theorem 概念 线性表简称表（List），是零个或多个元素的又穷序列，通常可以表示成a₀,a₁,a₂,........,a𝑛₋₁ :::</p><ul><li>表目：线性表中的元素</li><li>索引（下标）：元素在线性表中的位置</li><li>表的长度：表中元素个数称为线性表的长度</li><li>空表：长度为0的线性表（n=0）</li><li>表头：表的起始位置 - Head</li><li>表尾：表的结束位置 - Tail</li><li>当前位置 - Current position</li></ul><h2 id="线性表的逻辑结构" tabindex="-1"><a class="header-anchor" href="#线性表的逻辑结构" aria-hidden="true">#</a> 线性表的逻辑结构</h2><ul><li>有一个唯一的开始节点，它没有前驱，有一个唯一的直接后继</li><li>有一个唯一的终止节点，它有一个唯一的直接前驱，它没有后继。</li><li>其它的节点皆成为内部节点，每一个内部节点都有且仅有一个唯一的直接前驱，也有一个唯一的直接有后继。</li><li>&lt; aᵢ , aᵢ+1 &gt; aᵢ是aᵢ+1的前驱，aᵢ+1是aᵢ的后继</li><li>前驱、后继关系，具有反对称性和传递性</li></ul><p><img src="https://image.hualihai.cn/blog/85248ee85b8e40d0a902e454a7ee7203" alt="线性表的逻辑结构"></p><h2 id="线性表的特点" tabindex="-1"><a class="header-anchor" href="#线性表的特点" aria-hidden="true">#</a> 线性表的特点</h2><p>操作灵活，其长度可以增长，缩短，易于存储，易于运算</p><p>开始元素和终端元素都是唯一的，其余元素都有且仅有一个前驱元素和一个后继元素</p><p>同一线性表的各数据元素必定具有相同的数据类型和长度</p><p>各数据元素在线性表中都有自己的位置，且数据元素之间的相对位置是线性的</p><h2 id="线性表的分类" tabindex="-1"><a class="header-anchor" href="#线性表的分类" aria-hidden="true">#</a> 线性表的分类</h2>',14),t={href:"/data-structure/linear-list/sequence-list",target:"_blank",rel:"noopener noreferrer"},n=(0,i.Uk)("顺序表"),s={href:"/data-structure/linear-list/singly-linked-list",target:"_blank",rel:"noopener noreferrer"},d=(0,i.Uk)("单链表"),u={href:"/data-structure/linear-list/double-linked-list",target:"_blank",rel:"noopener noreferrer"},h=(0,i.Uk)("双链表"),o={href:"/data-structure/linear-list/circularly-linked-list",target:"_blank",rel:"noopener noreferrer"},c=(0,i.Uk)("循环链表"),p={},f=(0,a(83744).Z)(p,[["render",function(e,l){const a=(0,i.up)("OutboundLink");return(0,i.wg)(),(0,i.iD)(i.HY,null,[r,(0,i._)("ul",null,[(0,i._)("li",null,[(0,i._)("a",t,[n,(0,i.Wm)(a)])]),(0,i._)("li",null,[(0,i._)("a",s,[d,(0,i.Wm)(a)])]),(0,i._)("li",null,[(0,i._)("a",u,[h,(0,i.Wm)(a)])]),(0,i._)("li",null,[(0,i._)("a",o,[c,(0,i.Wm)(a)])])])],64)}]])},83744:(e,l)=>{l.Z=(e,l)=>{const a=e.__vccOpts||e;for(const[e,i]of l)a[e]=i;return a}}}]);