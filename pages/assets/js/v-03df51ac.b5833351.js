"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[7138],{31673:(e,o,c)=>{c.r(o),c.d(o,{data:()=>t});const t={key:"v-03df51ac",path:"/front-end/webpack/cli.html",title:"Introduction",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"front-end/webpack/cli.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},72435:(e,o,c)=>{c.r(o),c.d(o,{default:()=>n});const t=(0,c(66252).uE)('<h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p><code>Command Line Interface</code>就是<code>命令行接口</code>，它可以配置你的开发并与之交互。在早期的原型设计和分析中非常有用。在大多数情况下，<code>CLI</code>通常被用来配置一些文件和标志一些启动进程。</p><p>为了正确使用和方便分发此配置，<code>webpack</code>可以使用<code>webpack.config.js</code>来配置。任何发送到<code>CLI</code>的参数都将<code>映射</code>到配置文件中的参数。</p>',3),d={},n=(0,c(83744).Z)(d,[["render",function(e,o){return t}]])},83744:(e,o)=>{o.Z=(e,o)=>{const c=e.__vccOpts||e;for(const[e,t]of o)c[e]=t;return c}}}]);