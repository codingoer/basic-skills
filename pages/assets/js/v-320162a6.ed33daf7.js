"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[5182],{71544:(a,i,e)=>{e.r(i),e.d(i,{data:()=>l});const l={key:"v-320162a6",path:"/java/programing/keyword.html",title:"Java中的关键字",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"final vs finally vs finalize",slug:"final-vs-finally-vs-finalize",children:[]},{level:2,title:"this和super",slug:"this和super",children:[]}],filePathRelative:"java/programing/keyword.md",git:{updatedTime:1639064924e3,contributors:[{name:"codingoer",email:"codingoer@163.com",commits:1}]}}},27255:(a,i,e)=>{e.r(i),e.d(i,{default:()=>r});const l=(0,e(66252).uE)('<h1 id="java中的关键字" tabindex="-1"><a class="header-anchor" href="#java中的关键字" aria-hidden="true">#</a> Java中的关键字</h1><h2 id="final-vs-finally-vs-finalize" tabindex="-1"><a class="header-anchor" href="#final-vs-finally-vs-finalize" aria-hidden="true">#</a> final vs finally vs finalize</h2><ul><li>final</li></ul><p><strong>final并不等同于不可变</strong></p><p>Java编译器可以对final变量进行一些特别的优化，如果数据复制后就不应该再变了，就加final修饰符。</p><p>可以用来修饰类、方法、变量，分别有不同的意义，final修饰的类代表不可以继承扩展，final的变量是不可以修改的，而final的方法也是不可以重写的。</p><ul><li><p>finally</p></li><li><p>finalize</p></li></ul><p>finalize是基础类java.lang.Object的一个方法，它的设计目的是保证对象在被垃圾收集前完成特定资源的回收。finalize机制现在已经不推荐使用。</p><h2 id="this和super" tabindex="-1"><a class="header-anchor" href="#this和super" aria-hidden="true">#</a> this和super</h2>',9),n={},r=(0,e(83744).Z)(n,[["render",function(a,i){return l}]])},83744:(a,i)=>{i.Z=(a,i)=>{const e=a.__vccOpts||a;for(const[a,l]of i)e[a]=l;return e}}}]);