{"version":3,"file":"5637.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EChCA;;;;;;ACA6E;AAC7E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,oDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/concurrency/lock/volatile.html.js","webpack://notebook/./.temp/pages/java/concurrency/lock/volatile.html.vue","webpack://notebook/./.temp/pages/java/concurrency/lock/volatile.html.vue?246d","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-76021ac9\",\n  \"path\": \"/java/concurrency/lock/volatile.html\",\n  \"title\": \"\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"JMM\",\n      \"slug\": \"jmm\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"volatile和synchronized的区别\",\n      \"slug\": \"volatile和synchronized的区别\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/concurrency/lock/volatile.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<p>由于volatile关键字是与Java的内存模型有关的。</p>\n<p>volatile它所修饰的变量不保留拷贝，直接访问主内存中的</p>\n<p>并发之原子性、可见性、有序性</p>\n<p>原子性：原子性意味着一个时刻，只有一个线程能够执行一段代码</p>\n<p>可见性，有序性的概念。</p>\n<h2 id=\"jmm\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#jmm\" aria-hidden=\"true\">#</a> JMM</h2>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>对于可见性，Java提供了volatile关键字来保证可见性。</p>\n<p>缓存一致性问题？？</p>\n<h2 id=\"volatile和synchronized的区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#volatile和synchronized的区别\" aria-hidden=\"true\">#</a> volatile和synchronized的区别</h2>\n<ul>\n<li>\n<p>volatile仅能使用在变量级别；synchronized则可以使用在变量、方法、和类级别的</p>\n</li>\n<li>\n<p>volatile仅能实现变量的修改可见性，不能保证原子性；而synchronized则可以保证变量的修改可见性和原子性</p>\n</li>\n<li>\n<p>volatile不会造成线程的阻塞；synchronized可能会造成线程的阻塞。</p>\n</li>\n</ul>\n","import { ssrRender } from \"./volatile.html.vue?vue&type=template&id=3fbad403\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}