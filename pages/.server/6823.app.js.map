{"version":3,"file":"6823.app.js","mappings":"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","sources":["webpack://notebook/./.temp/pages/java/oop/class-compound.html.js","webpack://notebook/./.temp/pages/java/oop/class-compound.html.vue","webpack://notebook/./.temp/pages/java/oop/class-compound.html.vue?dff4","webpack://notebook/./.temp/pages/java/oop/class-compound.html.vue?a916","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-07fc6706\",\n  \"path\": \"/java/oop/class-compound.html\",\n  \"title\": \"类的组合\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"内存分布\",\n      \"slug\": \"内存分布\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"类加载和执行顺序\",\n      \"slug\": \"类加载和执行顺序\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"引用自己\",\n      \"slug\": \"引用自己\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"类中包含对象\",\n      \"slug\": \"类中包含对象\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/oop/class-compound.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"类的组合\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类的组合\" aria-hidden=\"true\">#</a> 类的组合</h1>\n<h2 id=\"内存分布\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#内存分布\" aria-hidden=\"true\">#</a> 内存分布</h2>\n<p><code>Line</code>的连个实例成员都是引用类型，引用实际的<code>Point</code></p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Point</span> start <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Point</span> end <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Line</span> line <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Line</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br></div></div><p>内存分布如下</p>\n<p><strong>栈</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">地址</th>\n<th style=\"text-align:left\">内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">start</td>\n<td style=\"text-align:left\">0x8000</td>\n<td style=\"text-align:left\">0x1000</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">end</td>\n<td style=\"text-align:left\">0x8008</td>\n<td style=\"text-align:left\">0x1008</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">line</td>\n<td style=\"text-align:left\">0x8010</td>\n<td style=\"text-align:left\">0x1010</td>\n</tr>\n</tbody>\n</table>\n<p><strong>堆</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">地址</th>\n<th style=\"text-align:left\">内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">start.x</td>\n<td style=\"text-align:left\">0x1000</td>\n<td style=\"text-align:left\">2</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">start.y</td>\n<td style=\"text-align:left\">0x1004</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">end.x</td>\n<td style=\"text-align:left\">0x1008</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">end.y</td>\n<td style=\"text-align:left\">0x100C</td>\n<td style=\"text-align:left\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">line.start</td>\n<td style=\"text-align:left\">0x1010</td>\n<td style=\"text-align:left\">0x1000</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">line.end</td>\n<td style=\"text-align:left\">0x1014</td>\n<td style=\"text-align:left\">0x1008</td>\n</tr>\n</tbody>\n</table>\n<p>start，end，line三个引用类型变量分配在栈中，保存的是实际的地址。实际内容保存在堆中，<strong>line的两个实例变量start和end还是引用，同样保存的实际内容的地址。</strong></p>\n<h2 id=\"类加载和执行顺序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类加载和执行顺序\" aria-hidden=\"true\">#</a> 类加载和执行顺序</h2>\n<ol>\n<li>Point静态初始化代码块</li>\n<li>Point初始化代码块</li>\n<li>Point构造方法</li>\n<li>Point初始化代码块</li>\n<li>Point构造方法</li>\n<li>Line静态初始化代码块</li>\n<li>Line初始化代码块</li>\n<li>Line构造方法</li>\n</ol>\n<h2 id=\"引用自己\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#引用自己\" aria-hidden=\"true\">#</a> 引用自己</h2>\n<p>定义一个<code>Person</code>类</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Person</span> father<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Person</span> mother<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> children<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br></div></div><p>测试代码</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Person</span> father <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"father\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Person</span> son <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"son\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    son<span class=\"token punctuation\">.</span><span class=\"token function\">setFather</span><span class=\"token punctuation\">(</span>father<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    father<span class=\"token punctuation\">.</span><span class=\"token function\">setChildren</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>son<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>son<span class=\"token punctuation\">.</span><span class=\"token function\">getFather</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><p>内存分布和上面基本一样，注意数组那块</p>\n<p><strong>栈</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">地址</th>\n<th style=\"text-align:left\">内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">son</td>\n<td style=\"text-align:left\">0x8000</td>\n<td style=\"text-align:left\">0x1000</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father</td>\n<td style=\"text-align:left\">0x8008</td>\n<td style=\"text-align:left\">0x1010</td>\n</tr>\n</tbody>\n</table>\n<p><strong>堆</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">名称</th>\n<th style=\"text-align:left\">地址</th>\n<th style=\"text-align:left\">内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">son.name</td>\n<td style=\"text-align:left\">0x1000</td>\n<td style=\"text-align:left\">son</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">son.father</td>\n<td style=\"text-align:left\">0x1004</td>\n<td style=\"text-align:left\">0x1010</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">son.mother</td>\n<td style=\"text-align:left\">0x1008</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">son.children</td>\n<td style=\"text-align:left\">0x100C</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father.name</td>\n<td style=\"text-align:left\">0x1010</td>\n<td style=\"text-align:left\">father</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father.father</td>\n<td style=\"text-align:left\">0x1014</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father.mother</td>\n<td style=\"text-align:left\">0x1018</td>\n<td style=\"text-align:left\">null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father.children</td>\n<td style=\"text-align:left\">0x101C</td>\n<td style=\"text-align:left\">0x1020</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">father.children[0]</td>\n<td style=\"text-align:left\">0x1020</td>\n<td style=\"text-align:left\">0x1000</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"类中包含对象\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类中包含对象\" aria-hidden=\"true\">#</a> 类中包含对象</h2>\n<p>定义了一个<code>ShapeManager</code>类，包含<code>Shape</code>对象</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShapeManager</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Shape</span> shape <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//private Shape shape;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> shapes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Shape</span><span class=\"token punctuation\">[</span>MAX_NUM<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br></div></div><p>测试类</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">ShapeManager</span> manager <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ShapeManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>代码执行顺序</p>\n<ol>\n<li>ShapeManager静态初始化代码块</li>\n<li>Shape静态初始化代码块</li>\n<li>Shape初始化代码块</li>\n<li>Shape构造方法</li>\n<li>ShapeManager初始化代码块</li>\n<li>ShapeManager构造方法</li>\n</ol>\n<p>先加载<code>ShapeManager</code>类，然后加载<code>Shape</code>类，<strong>注意的是，先执行<code>Shape</code>的初始化操作，后执行<code>ShapeManager</code>的初始化操作</strong>。</p>\n<p>需要注意的是，类中如果只含有对象数组，代码的执行顺序</p>\n<ol>\n<li>ShapeManager静态初始化代码块</li>\n<li>ShapeManager初始化代码块</li>\n<li>ShapeManager构造方法</li>\n</ol>\n<p><strong>如果一个类中创建了一个对象数组，这个对象的类并没有被加载，也没有被初始化。这是为什么？</strong></p>\n<p><strong>如果一类中只声明了一个对象的引用，这个对象的类不加载，这个对象也不会创建。</strong></p>\n","export * from \"-!../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./class-compound.html.vue?vue&type=template&id=a838790c\"","import { ssrRender } from \"./class-compound.html.vue?vue&type=template&id=a838790c\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}