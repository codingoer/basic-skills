{"version":3,"file":"5328.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECnDA;;;;;;;;;;;;ACAgF;AAChF;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,uDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/database/mongodb/introuction.html.js","webpack://notebook/./.temp/pages/database/mongodb/introuction.html.vue","webpack://notebook/./.temp/pages/database/mongodb/introuction.html.vue?1ed4","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-e9c8a07a\",\n  \"path\": \"/database/mongodb/introuction.html\",\n  \"title\": \"前言\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"文档结构\",\n      \"slug\": \"文档结构\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"点标记\",\n      \"slug\": \"点标记\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"特定BSON类型\",\n      \"slug\": \"特定bson类型\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"ObjectId\",\n          \"slug\": \"objectid\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"String\",\n          \"slug\": \"string\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"filePathRelative\": \"database/mongodb/introuction.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"前言\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#前言\" aria-hidden=\"true\">#</a> 前言</h1>\n<p>  MongoDB是一个免费开源的<code>文档型</code>数据库，它是典型的<code>NoSQL</code>数据库，因为它不依赖传统的基于表的关系数据结构，相反它使用动态架构的类似<code>JSON</code>的文档。不像关系型数据库，MongoDB不需要提前定义好模型，在你往数据库中添加数据之前。你可以在任何时候修改表结构，也不需要每次修改表结构够设置新的数据库。</p>\n<h1 id=\"文档型数据库\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#文档型数据库\" aria-hidden=\"true\">#</a> 文档型数据库</h1>\n<p>在MongoDB中的记录就是一个文档，该文档是由键值对组成的数据结构。MongoDB很像<code>JSON</code>对象，这些键值对的值可以包含其他的文档，数据，或者数组文档。</p>\n<p>使用文档型数据库的优点：</p>\n<ul>\n<li>在许多编程语言中文档符合原生的数据类型</li>\n<li>嵌入式的文档或者数组可以减少高价的链接查询</li>\n<li>动态的模式支持流畅的多态性</li>\n</ul>\n<h1 id=\"文档\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#文档\" aria-hidden=\"true\">#</a> 文档</h1>\n<p>MongoDB将记录存储为BSON文档。BSON是JSON文档的二进制表现形式，尽管它比JSON包含更多的数据类型。</p>\n<h2 id=\"文档结构\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#文档结构\" aria-hidden=\"true\">#</a> 文档结构</h2>\n<p>MongoDB文档是由键值对组成。</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>{\n   field1: value1,\n   field2: value2,\n   field3: value3,\n   ...\n   fieldN: valueN\n}\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><p><strong>字段名称</strong></p>\n<p>字段名是<code>String</code><br>\n对于字段名称，MongoDB文档有如下约束：</p>\n<ol>\n<li><code>_id</code>是保留的被用来当做主键，它的值必须是唯一的，不变的。</li>\n<li>字段名称不能包含<code>null</code></li>\n<li>字段名称不能以<code>$</code>符号开始</li>\n</ol>\n<p>虽然BSON文档可以有不止一个相同的字段名，但是用结构表示MongoDB不支持重复的字段名。</p>\n<p><strong>字段值</strong></p>\n<p>字段的值可以是任何<code>BSON</code>的数据类型，包括其他的文档，数组，文档数组。</p>\n<h2 id=\"点标记\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#点标记\" aria-hidden=\"true\">#</a> 点标记</h2>\n<h1 id=\"bson\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#bson\" aria-hidden=\"true\">#</a> BSON</h1>\n<p><code>BSON</code>是一种二进制序列化格式, 用于在MongoDB中存储文档和进行远程过程调用。</p>\n<p>每一个BSON类型都有一个integer和string作为唯一标识。</p>\n<h2 id=\"特定bson类型\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#特定bson类型\" aria-hidden=\"true\">#</a> 特定BSON类型</h2>\n<h3 id=\"objectid\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#objectid\" aria-hidden=\"true\">#</a> ObjectId</h3>\n<p>ObjectId是唯一的，快速生成，可以排序。ObjectId有12个字节</p>\n<ul>\n<li>前四个字节是时间戳</li>\n<li>然后五个字节是随机数</li>\n<li>最后三个字节是计数器</li>\n</ul>\n<p>在MongoDB中，每一个存在集合中的文档需要一个唯一的<code>_id</code>字段作为<code>主键</code>。如果一个插入的文档没有<code>_id</code>字段，MongoDB驱动会自动生成一个<code>ObjectId</code>当做<code>_id</code>字段。</p>\n<p>MongoDB客户端应添加具有唯一<code>ObjectId</code>的<code>_id</code>字段。使用ObjectId当做<code>_id</code>。</p>\n<h3 id=\"string\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#string\" aria-hidden=\"true\">#</a> String</h3>\n","import { ssrRender } from \"./introuction.html.vue?vue&type=template&id=2a7fa298\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}