{"version":3,"file":"1329.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ECnBA;EAAA;EAAA;EAAA;EAAA;;;;;;;AEA+E;AAC/E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,sDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/specification/markdown/commonmark.html.js","webpack://notebook/./.temp/pages/specification/markdown/commonmark.html.vue","webpack://notebook/./.temp/pages/specification/markdown/commonmark.html.vue?3103","webpack://notebook/./.temp/pages/specification/markdown/commonmark.html.vue?fd9a","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-3a442746\",\n  \"path\": \"/specification/markdown/commonmark.html\",\n  \"title\": \"CommonMark Spec\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [],\n  \"filePathRelative\": \"specification/markdown/commonmark.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"commonmark-spec\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#commonmark-spec\" aria-hidden=\"true\">#</a> CommonMark Spec</h1>\n<blockquote>\n<p>A strongly defined, highly compatible specification of Markdown</p>\n</blockquote>\n<p>相关文档</p>\n<ul>\n<li><a href=\"https://commonmark.org/\" target=\"_blank\" rel=\"noopener noreferrer\">CommonMark<OutboundLink/></a></li>\n<li><a href=\"https://spec.commonmark.org/\" target=\"_blank\" rel=\"noopener noreferrer\">CommonMark Spec<OutboundLink/></a></li>\n</ul>\n<p><strong>Why is CommonMark needed?</strong></p>\n<p>In the absence of a spec, early implementers consulted the original Markdown.pl code to resolve these ambiguities. But Markdown.pl was quite buggy, and gave manifestly bad results in many cases, so it was not a satisfactory replacement for a spec. Markdown.pl was last updated December 17th, 2004.</p>\n<p>Because there is no unambiguous spec, implementations have diverged considerably over the last 10 years. As a result, users are often surprised to find that a document that renders one way on one system (say, a GitHub wiki) renders differently on another (say, converting to docbook using Pandoc). To make matters worse, because nothing in Markdown counts as a “syntax error,” the divergence often isn’t discovered right away.</p>\n<p>There’s no standard test suite for Markdown; MDTest is the closest thing we have. The only way to resolve Markdown ambiguities and inconsistencies is Babelmark, which compares the output of 20+ implementations of Markdown against each other to see if a consensus emerges.</p>\n<p>We propose a standard, unambiguous syntax specification for Markdown, along with a suite of comprehensive tests to validate Markdown implementations against this specification. We believe this is necessary, even essential, for the future of Markdown.</p>\n","export * from \"-!../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./commonmark.html.vue?vue&type=template&id=e9fab840\"","import { ssrRender } from \"./commonmark.html.vue?vue&type=template&id=e9fab840\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}