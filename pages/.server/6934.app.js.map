{"version":3,"file":"6934.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EC5CA;;;;;ACAqF;AACrF;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,4DAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/tools/development-tool.html.js","webpack://notebook/./.temp/pages/tools/development-tool.html.vue","webpack://notebook/./.temp/pages/tools/development-tool.html.vue?3bc3","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-63502f3c\",\n  \"path\": \"/tools/development-tool.html\",\n  \"title\": \"开发工具如何选择\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"IDE和Text Editor有什么不同？\",\n      \"slug\": \"ide和text-editor有什么不同\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"主流的Text Editor\",\n      \"slug\": \"主流的text-editor\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"主流的IDE\",\n      \"slug\": \"主流的ide\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"选择合适自己的开发工具\",\n      \"slug\": \"选择合适自己的开发工具\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"tools/development-tool.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"开发工具如何选择\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#开发工具如何选择\" aria-hidden=\"true\">#</a> 开发工具如何选择</h1>\n<p>当你开始学习编程时，选择一款合适的开发工具可以使你的编码工作达到事半功倍的效果。市场上各种开发工具该如何选择呢？是选择<code>文本编辑器</code>还是选择<code>集成开发环境</code>。对于每一个开发者来说，没有最好的工具，只有合适的工具，毕竟有句话是这样说的，适合自己的才是最好的。</p>\n<p>在日常工作中，不同的开发工作需要选择不同的工具，比如前端开发人员和后端开发人员，他们所使用的开发工具肯定是不相同的。同样都是开发后端，开发Java的人员和开发PHP的人员使用的工具肯定也是不相同的。</p>\n<h2 id=\"ide和text-editor有什么不同\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ide和text-editor有什么不同\" aria-hidden=\"true\">#</a> IDE和Text Editor有什么不同？</h2>\n<p>在比较他们之间的不同之前，有必要先弄清楚他们的定义。</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">IDE</p>\n<p>IDE是(Integrated Development Environment)的简称，是文本编辑器的化合物。</p>\n</div>\n<p>IDE基本含有文本编辑器的所有功能，同时还包括了一些额外的工具和一些专业的功能，使的开发变得更加容易。比如开发web开发的<code>Webstorm</code>，开发Java的<code>Intellij</code>。这些IDE中不仅仅的文本编辑，还有<code>调试</code>，<code>版本控制</code>等一些功能。</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">Text Editor</p>\n<p>文本编辑器是编辑纯文本的计算机程序类型。比如Notepad</p>\n</div>\n<p>最近这些年，文本编辑器变化很大，功能越来越强大，扩展性越来越强。比如<code>Notepad++</code>,<code>Sublime Text</code>。现在的文本编辑器基本都可以高亮显示不同的编程语言，并且可以安装各种各样的插件，这使的文本编辑器变得非常强大，一个功能强大的编辑器可以匹配上一个集成开发环境了。</p>\n<p>总的来说，文本编辑器主要的目标就是提供编写代码的环境，而IDE是集成了一些特殊工具的开发环境，这些工具包括，文本编辑器，自动补全，断点调试，部署工具等等。</p>\n<h2 id=\"主流的text-editor\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#主流的text-editor\" aria-hidden=\"true\">#</a> 主流的Text Editor</h2>\n<p>从notepad产生到现在，文本编辑器已经走过了很长的一段路。现在，配合一些强大的功能丰富的插件，可以完成日常开发任务。</p>\n<p>文本编辑器的优点</p>\n<ul>\n<li>\n<p>占用空间比IDE小的多</p>\n</li>\n<li>\n<p>简单的操作界面，使得你集中经历在编码上面</p>\n</li>\n</ul>\n<p>文本编辑器的缺点</p>\n<ul>\n<li>功能简单</li>\n</ul>\n<p>现在流行的文本编辑器，<code>Atom</code>,<code>Sublime</code>,<code>VSCode</code></p>\n<h2 id=\"主流的ide\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#主流的ide\" aria-hidden=\"true\">#</a> 主流的IDE</h2>\n<h2 id=\"选择合适自己的开发工具\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#选择合适自己的开发工具\" aria-hidden=\"true\">#</a> 选择合适自己的开发工具</h2>\n","import { ssrRender } from \"./development-tool.html.vue?vue&type=template&id=546b3d93\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}