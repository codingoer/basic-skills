{"version":3,"file":"2381.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EChCA;;;;;ACA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/concurrency/index.html.js","webpack://notebook/./.temp/pages/java/concurrency/index.html.vue","webpack://notebook/./.temp/pages/java/concurrency/index.html.vue?a8c4","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-2ba22020\",\n  \"path\": \"/java/concurrency/\",\n  \"title\": \"\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"并发和并行的区别\",\n      \"slug\": \"并发和并行的区别\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"原子性\",\n      \"slug\": \"原子性\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/concurrency/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<p>ThreadPoolExecutor</p>\n<p>class ThreadPoolExecutor extends AbstractExecutorService</p>\n<p>abstract class AbstractExecutorService implements ExecutorService</p>\n<p>interface ExecutorService extends Executor</p>\n<p>interface Executor</p>\n<p>创建线程池的几种方式</p>\n<p>核心线程池：\n最大线程数量：如果配置的maximumPoolSize是10，当线程数量是10的时候，就开始放入阻塞队列\n阻塞队列数量</p>\n<p>阻塞队列拒绝策略，如果不设置阻塞队列的数量，那么全部在内存中。</p>\n<p>BlockingQueue线程的阻塞队列</p>\n<p>阻塞队列，非阻塞队列的区别</p>\n<p>阻塞队列的值该设置为多少</p>\n<p>ThreadPoolExecutor还有什么策略</p>\n<ol>\n<li>\n<p>定时任务开始执行时，先将所有促销置为失效状态，并更新本地缓存数据</p>\n</li>\n<li>\n<p>顺序刷新促销对应商品es数据</p>\n</li>\n<li>\n<p>搜索接口返回商品结果数据时，先判断对应促销是否失效，如果已经失效则将促销信息删除</p>\n</li>\n</ol>\n<p>促销失败定时任务对应类名：PromotionToInvalidJob</p>\n<p>LinkedBlockingQueue</p>\n<p>ArrayBlockingQueue</p>\n<p>synchronized\nvolatile\nsynchronized vs volatile</p>\n<p>Java多线程编程核心技术\nThreadLocal和synchronized的区别</p>\n<h2 id=\"并发和并行的区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#并发和并行的区别\" aria-hidden=\"true\">#</a> 并发和并行的区别</h2>\n<p>并发： 同一时间段，多个任务都在执行 (单位时间内不一定同时执行)；\n并行： 单位时间内，多个任务同时执行。</p>\n<h2 id=\"原子性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#原子性\" aria-hidden=\"true\">#</a> 原子性</h2>\n<p>如果把一个事务可看作是一个程序,它要么完整的被执行,要么完全不执行。这种特性就叫原子性。</p>\n<p>为什么多线程不一定快，如何解决？</p>\n<ul>\n<li>\n<p>理论基础</p>\n<ul>\n<li>ThreadPool</li>\n</ul>\n</li>\n<li>\n<p>容器</p>\n<ul>\n<li>ConcurrentHashMap493</li>\n</ul>\n</li>\n<li>\n<p>工具类</p>\n<ul>\n<li>CountDownLatch531</li>\n<li>ThreadLoal</li>\n<li>CyclicBarrier533</li>\n<li>Semaphore</li>\n</ul>\n</li>\n<li>\n<p>设计模式</p>\n<ul>\n<li>Fork/Join</li>\n<li>Future</li>\n</ul>\n</li>\n<li>\n<p>JMM</p>\n</li>\n</ul>\n","import { ssrRender } from \"./index.html.vue?vue&type=template&id=d70aca3a\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}