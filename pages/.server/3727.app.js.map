{"version":3,"file":"3727.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECnBA;;;;;ACAmF;AACnF;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,0DAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/collection/generics/generic-method.html.js","webpack://notebook/./.temp/pages/java/collection/generics/generic-method.html.vue","webpack://notebook/./.temp/pages/java/collection/generics/generic-method.html.vue?2889","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-59aa88ec\",\n  \"path\": \"/java/collection/generics/generic-method.html\",\n  \"title\": \"泛型方法\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [],\n  \"filePathRelative\": \"java/collection/generics/generic-method.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"泛型方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#泛型方法\" aria-hidden=\"true\">#</a> 泛型方法</h1>\n<p>一个泛型方法，<strong>类型参数</strong>为T，放在返回值前面。</p>\n<div class=\"custom-container danger\"><p class=\"custom-container-title\">注意点</p>\n<p>一个方法是不是泛型的，与它所在的类是不是泛型没有什么关系。</p>\n</div>\n","import { ssrRender } from \"./generic-method.html.vue?vue&type=template&id=2fde9b26\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}