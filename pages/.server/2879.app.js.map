{"version":3,"file":"2879.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EChCA;;;;;;ACAkF;AAClF;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,yDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/collection/generics/generic-class.html.js","webpack://notebook/./.temp/pages/java/collection/generics/generic-class.html.vue","webpack://notebook/./.temp/pages/java/collection/generics/generic-class.html.vue?bb5a","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-11c6338d\",\n  \"path\": \"/java/collection/generics/generic-class.html\",\n  \"title\": \"泛型类\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"泛型类与普通类的区别\",\n      \"slug\": \"泛型类与普通类的区别\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"泛型类的使用\",\n      \"slug\": \"泛型类的使用\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/collection/generics/generic-class.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"泛型类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#泛型类\" aria-hidden=\"true\">#</a> 泛型类</h1>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">泛型类的定义</p>\n<p>泛型类（generic class）是一个具有一个或多个<strong>类型变量</strong>的类。</p>\n</div>\n<p>泛型类引入了一个<strong>类型变量T，用&lt;&gt;括起来</strong>，放在类名后面。</p>\n<p>T表示<code>类型参数</code>，泛型就是<code>类型参数化</code>，处理的数据类型不是固定的，而是可以作为参数传入。</p>\n<h2 id=\"泛型类与普通类的区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#泛型类与普通类的区别\" aria-hidden=\"true\">#</a> 泛型类与普通类的区别</h2>\n<ol>\n<li>类名后面多了一个<code>&lt;T&gt;</code></li>\n<li>类中的属性的类型都是T</li>\n</ol>\n<h2 id=\"泛型类的使用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#泛型类的使用\" aria-hidden=\"true\">#</a> 泛型类的使用</h2>\n<p>从Java7开始，支持省略后面的参数类型</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div>","import { ssrRender } from \"./generic-class.html.vue?vue&type=template&id=2a357856\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}