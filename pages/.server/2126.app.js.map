{"version":3,"file":"2126.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EClDA;;;;;ACA2E;AAC3E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,kDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/oop/class/string.html.js","webpack://notebook/./.temp/pages/java/oop/class/string.html.vue","webpack://notebook/./.temp/pages/java/oop/class/string.html.vue?ccfc","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-7340091e\",\n  \"path\": \"/java/oop/class/string.html\",\n  \"title\": \"常用基础类之String\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"String\",\n      \"slug\": \"string\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"字符串缓存\",\n      \"slug\": \"字符串缓存\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"StringBuilder\",\n      \"slug\": \"stringbuilder\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"StringBuffer\",\n      \"slug\": \"stringbuffer\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"StringBuilder VS StringBuffer\",\n      \"slug\": \"stringbuilder-vs-stringbuffer\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/oop/class/string.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"常用基础类之string\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#常用基础类之string\" aria-hidden=\"true\">#</a> 常用基础类之String</h1>\n<h2 id=\"string\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#string\" aria-hidden=\"true\">#</a> String</h2>\n<p>String是典型的Immutable类，被声明为final，所有的属性也是final。<strong>由于不可变性，类似拼接，裁剪字符串操作，都会产生新的String对象</strong></p>\n<ul>\n<li>\n<p>通过String和相关类，考察基本的线程安全设计与实现，各种基础编程实践</p>\n</li>\n<li>\n<p>考察JVM对象缓存机制的理解以及如何良好地使用</p>\n</li>\n<li>\n<p>考察JVM优化Java代码的一些技巧</p>\n</li>\n</ul>\n<h2 id=\"字符串缓存\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#字符串缓存\" aria-hidden=\"true\">#</a> 字符串缓存</h2>\n<h2 id=\"stringbuilder\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stringbuilder\" aria-hidden=\"true\">#</a> StringBuilder</h2>\n<p>为了解决拼接字符串产生太多中间对象的问题而提供的一个类。</p>\n<h2 id=\"stringbuffer\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stringbuffer\" aria-hidden=\"true\">#</a> StringBuffer</h2>\n<p>与<code>StringBuilder</code>没有本质区别，但是线程安全，使用<code>synchronized</code>有一定的开销。</p>\n<h2 id=\"stringbuilder-vs-stringbuffer\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stringbuilder-vs-stringbuffer\" aria-hidden=\"true\">#</a> StringBuilder VS StringBuffer</h2>\n<p>一个是线程安全，一个是线程非安全</p>\n<p>for循环禁止使用字符串拼接</p>\n<p>使用哪一种考虑场景，有没有并发情况</p>\n<p>StringBuilder代替StringBuffer, StringBuffer线程安全做了不必要的开销</p>\n","import { ssrRender } from \"./string.html.vue?vue&type=template&id=365f76df\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}