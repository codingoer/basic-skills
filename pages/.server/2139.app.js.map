{"version":3,"file":"2139.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECpEA;;;;;;;;;;ACA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/jdk8/index.html.js","webpack://notebook/./.temp/pages/java/jdk8/index.html.vue","webpack://notebook/./.temp/pages/java/jdk8/index.html.vue?81e6","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-67ace6b4\",\n  \"path\": \"/java/jdk8/\",\n  \"title\": \"\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"Java8的一些新特性\",\n      \"slug\": \"java8的一些新特性\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"函数式编程\",\n      \"slug\": \"函数式编程\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"STREAM 流\",\n      \"slug\": \"stream-流\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"ForEach()\",\n      \"slug\": \"foreach\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"OPTIONAL\",\n      \"slug\": \"optional\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Lambda expressions\",\n      \"slug\": \"lambda-expressions\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"functional interface\",\n      \"slug\": \"functional-interface\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"接口中包含静态方法和默认方法\",\n      \"slug\": \"接口中包含静态方法和默认方法\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/jdk8/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h2 id=\"java8的一些新特性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#java8的一些新特性\" aria-hidden=\"true\">#</a> Java8的一些新特性</h2>\n<p>什么时间发行的，2014年</p>\n<h2 id=\"函数式编程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#函数式编程\" aria-hidden=\"true\">#</a> 函数式编程</h2>\n<h2 id=\"stream-流\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#stream-流\" aria-hidden=\"true\">#</a> STREAM 流</h2>\n<p>Features</p>\n<ul>\n<li>forEach() method in Iterable interface</li>\n<li>Functional Interfaces and Lambda Expressions</li>\n</ul>\n<h2 id=\"foreach\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#foreach\" aria-hidden=\"true\">#</a> ForEach()</h2>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>skus<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>productSku <span class=\"token operator\">-></span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>productSku<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>stream一般用在并发比较高的场景，对CPU的消耗比较大，一般业务逻辑不建议使用。</p>\n<h2 id=\"optional\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#optional\" aria-hidden=\"true\">#</a> OPTIONAL</h2>\n<p>在Java8之前，我们写代码要时刻注意</p>\n<h2 id=\"lambda-expressions\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#lambda-expressions\" aria-hidden=\"true\">#</a> Lambda expressions</h2>\n<h2 id=\"functional-interface\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#functional-interface\" aria-hidden=\"true\">#</a> functional interface</h2>\n<h2 id=\"接口中包含静态方法和默认方法\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#接口中包含静态方法和默认方法\" aria-hidden=\"true\">#</a> 接口中包含静态方法和默认方法</h2>\n<p>在Java8之前，<code>接口</code>中只能含有公有的抽象方法，例如这样。在支付Service中，定义了获取积分的一个接口</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IPayService</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token class-name\">Points</span> <span class=\"token function\">getPoints</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div>","import { ssrRender } from \"./index.html.vue?vue&type=template&id=9cfb5a34\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}