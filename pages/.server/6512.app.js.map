{"version":3,"file":"6512.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECnDA;;;;;;;;;;;;;ACA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/front-end/webpack/loader/index.html.js","webpack://notebook/./.temp/pages/front-end/webpack/loader/index.html.vue","webpack://notebook/./.temp/pages/front-end/webpack/loader/index.html.vue?23ba","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-b1a02bae\",\n  \"path\": \"/front-end/webpack/loader/\",\n  \"title\": \"Loaders\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"如何使用Loaders\",\n      \"slug\": \"如何使用loaders\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"为什么会有Loaders\",\n      \"slug\": \"为什么会有loaders\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"举个栗子\",\n      \"slug\": \"举个栗子\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"使用Loaders\",\n      \"slug\": \"使用loaders\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"配置的方式\",\n          \"slug\": \"配置的方式\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"filePathRelative\": \"front-end/webpack/loader/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"loaders\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#loaders\" aria-hidden=\"true\">#</a> Loaders</h1>\n<p>loaders n.装载机，这里我翻译成加载器，其实意思都差不多。</p>\n<p>webpack可以使用加载器(<code>loaders</code>)来处理文件。这样以来，就可以绑定任何的静态资源文件，这些文件不仅仅局限于JavaScript。可以使用Node.js编写自己的加载器。</p>\n<p>加载器是应用于将源代码转换为模块的转换。这允许我们通过<code>import</code>来处理文件。因此，加载器可以看作是一些列的任务，并且提供一种强大的方式处理前端构建步骤。加载器可以将不同语言的文件（比如TypeScirpt）转换为JavaScript。加载器也可以直接从JavaScript模块中<code>import</code>CSS文件。</p>\n<h2 id=\"如何使用loaders\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#如何使用loaders\" aria-hidden=\"true\">#</a> 如何使用Loaders</h2>\n<p>如果想要使用哪一个加载器，通过指定<code>loadersname</code>来激活。</p>\n<ol>\n<li>在require中使用</li>\n<li>通过正则表达式在webpack配置中使用</li>\n</ol>\n<h2 id=\"为什么会有loaders\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#为什么会有loaders\" aria-hidden=\"true\">#</a> 为什么会有Loaders</h2>\n<h2 id=\"举个栗子\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#举个栗子\" aria-hidden=\"true\">#</a> 举个栗子</h2>\n<blockquote>\n<p>使用加载器导入Css文件</p>\n</blockquote>\n<ol>\n<li>无论使用哪一种加载器，首先都要安装</li>\n</ol>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code>npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev css<span class=\"token operator\">-</span>loader\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><ol start=\"2\">\n<li>命令<code>webpack</code>使用加载器处理<code>.css</code>文件，在<code>webpack.config.js</code>中</li>\n</ol>\n<div class=\"language-javascript ext-js line-numbers-mode\"><pre v-pre class=\"language-javascript\"><code>module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.css$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> use<span class=\"token operator\">:</span> <span class=\"token string\">'css-loader'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><h2 id=\"使用loaders\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#使用loaders\" aria-hidden=\"true\">#</a> 使用<code>Loaders</code></h2>\n<p>官网提供了三种方式</p>\n<ul>\n<li>推荐的方式，在<code>webpack.config.js</code>中指定</li>\n<li>在<code>import</code>语句中指定</li>\n<li>通过命令行方式</li>\n</ul>\n<h3 id=\"配置的方式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#配置的方式\" aria-hidden=\"true\">#</a> 配置的方式</h3>\n<p>先来了解一个语法<code>module.rules</code>。</p>\n","import { ssrRender } from \"./index.html.vue?vue&type=template&id=508e931c\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}