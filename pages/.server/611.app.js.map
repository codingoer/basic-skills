{"version":3,"file":"611.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;EC9FA;;;;;;;;;;;;;IAAA,mCAyDI,qBAAuB;;IAzD3B,mCA0DI,qBAAuB;;IA1D3B,mCA+DI,qBAAuB;;IA/D3B,mCAgEI,qBAAuB;;IAhE3B,mCAmEI,qBAAuB;;IAnE3B,mCAoEI,qBAAuB;;IApE3B,mCAuEI,qBAAuB;;IAvE3B,mCAwEI,qBAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAxE3B,mCA+JI,qBAAuB;;IA/J3B,mCAgKI,qBAAuB;;IAhK3B,mCAqKI,qBAAuB;;IArK3B,mCAsKI,qBAAuB;;IAtK3B,mCAyKI,qBAAuB;;IAzK3B,mCA0KI,qBAAuB;;IA1K3B,mCA6KI,qBAAuB;;IA7K3B,mCA8KI,qBAAuB;;IA9K3B,mCAiLI,qBAAuB;;IAjL3B,mCAkLI,qBAAuB;;IAlL3B,mCAqLI,qBAAuB;;IArL3B,mCAsLI,qBAAuB;;IAtL3B,mCAyLI,qBAAuB;;IAzL3B,mCA0LI,qBAAuB;;;;;;;;;;;;;;AE1LmD;AAC9E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,qDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/programing/operation.html.js","webpack://notebook/./.temp/pages/java/programing/operation.html.vue","webpack://notebook/./.temp/pages/java/programing/operation.html.vue?22dd","webpack://notebook/./.temp/pages/java/programing/operation.html.vue?0036","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-9c32faa2\",\n  \"path\": \"/java/programing/operation.html\",\n  \"title\": \"Java中的运算符\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"算数运算\",\n      \"slug\": \"算数运算\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"加，减，乘，除\",\n          \"slug\": \"加-减-乘-除\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"取模\",\n          \"slug\": \"取模\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"自增(++)/自减(--)\",\n          \"slug\": \"自增-自减\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"比较运算\",\n      \"slug\": \"比较运算\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"逻辑运算\",\n      \"slug\": \"逻辑运算\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"|与||的区别\",\n          \"slug\": \"与-的区别\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"三目运算符\",\n          \"slug\": \"三目运算符\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"位运算符\",\n      \"slug\": \"位运算符\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"数学函数与常量\",\n      \"slug\": \"数学函数与常量\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"结合赋值的运算符\",\n      \"slug\": \"结合赋值的运算符\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"括号与运算符级别\",\n      \"slug\": \"括号与运算符级别\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/programing/operation.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"java中的运算符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#java中的运算符\" aria-hidden=\"true\">#</a> Java中的运算符</h1>\n<ul>\n<li>算数运算：日常的加减乘除</li>\n<li>比较运算：比较大小</li>\n<li>逻辑运算：针对布尔值的运算</li>\n</ul>\n<h2 id=\"算数运算\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#算数运算\" aria-hidden=\"true\">#</a> 算数运算</h2>\n<p>算术运算有：<strong>+ - * / % ++ --</strong></p>\n<ul>\n<li><strong>取模运算适用于整数和字符类型</strong></li>\n<li>其他算术符适用于所有数值类型和字符类型</li>\n</ul>\n<h3 id=\"加-减-乘-除\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#加-减-乘-除\" aria-hidden=\"true\">#</a> 加，减，乘，除</h3>\n<ol>\n<li>两个正数相乘的结果可能超出</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2147483647</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>结果为什么是-2 ??</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">byte</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span> <span class=\"token number\">127</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// c is -128</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><ol start=\"2\">\n<li>两个小数相减结果有小数</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">double</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span> b <span class=\"token operator\">=</span> <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><ol start=\"3\">\n<li>整数相除不是四舍五入</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>结果是2而不是2.5</p>\n<ol start=\"4\">\n<li>小数计算结果不准确</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">01</span> <span class=\"token operator\">*</span> <span class=\"token number\">01</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br></div></div><p>结果是0.01000000001；</p>\n<h3 id=\"取模\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#取模\" aria-hidden=\"true\">#</a> 取模</h3>\n<p>取模运算适用于<strong>整数和字符类型</strong></p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token operator\">%</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>a = 2</p>\n<h3 id=\"自增-自减\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#自增-自减\" aria-hidden=\"true\">#</a> 自增(++)/自减(--)</h3>\n<p>自增/自减是对自己做加1或者减1操作，都有两种形式。</p>\n<ol>\n<li>放在变量前</li>\n<li>放在变量后</li>\n</ol>\n<p>说明：<strong>如果只是对自己操作，这两种形式没什么差别</strong>，区别在于还有其他操作的时候。</p>\n<ul>\n<li>放在变量后(a++)是先用原来的值进行其他操作，然后再对自己做修改</li>\n<li>放在变量后(++a)是先对自己做修改，再用修改后的值进行其他操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">快捷运算</th>\n<th style=\"text-align:left\">等同运算</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">b=a++-1</td>\n<td style=\"text-align:left\">b=a-1, a=a+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">c=++a-1</td>\n<td style=\"text-align:left\">a=a+1, c=a-1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">arrA[i++]=arrB[++j]</td>\n<td style=\"text-align:left\">j=j+1, arrA[i]=arrB[j], i=i+1</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"比较运算\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#比较运算\" aria-hidden=\"true\">#</a> 比较运算</h2>\n<p>比较运算就是计算两个值之间的关系，结果是一个布尔类型。<strong>比较运算适用于所有数值类型和字符类型。</strong></p>\n<p>比较操作符号：</p>\n<ul>\n<li>大于(&gt;)</li>\n<li>大于等于(&gt;=)</li>\n<li>小于(&lt;)</li>\n<li>小于等于(&lt;=)</li>\n<li>等于(==),</li>\n<li>不等于(!=)</li>\n</ul>\n<p><strong>对于数组，==判断的是两个变量指向的是不是同一个数组，而不是两个数组的元素内容是都一样</strong></p>\n<h2 id=\"逻辑运算\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#逻辑运算\" aria-hidden=\"true\">#</a> 逻辑运算</h2>\n<p>逻辑运算只可应用于boolean类型的数据，比较运算的结果是布尔值。</p>\n<ul>\n<li>与（&amp;）</li>\n<li>或（|）</li>\n<li>非（!）</li>\n<li>异或（^）</li>\n<li>短路与（&amp;&amp;）</li>\n<li>短路或（||）</li>\n</ul>\n<h3 id=\"与-的区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#与-的区别\" aria-hidden=\"true\">#</a> |与||的区别</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">boolean</span> a <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b<span class=\"token operator\">++</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">boolean</span> a <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">boolean</span> flag <span class=\"token operator\">=</span> a <span class=\"token operator\">||</span> b<span class=\"token operator\">++</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><p>||会短路，即看到||前半部分就可以判定结果的情况下，忽略||后面的运算。</p>\n<h3 id=\"三目运算符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#三目运算符\" aria-hidden=\"true\">#</a> 三目运算符</h3>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>x <span class=\"token operator\">&lt;</span> y <span class=\"token operator\">?</span> x <span class=\"token operator\">:</span> y\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"位运算符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#位运算符\" aria-hidden=\"true\">#</a> 位运算符</h2>\n<ul>\n<li>&amp;</li>\n<li>|</li>\n<li>^</li>\n<li>~</li>\n<li><strong>&lt;&lt;</strong></li>\n<li><strong>&gt;&gt;</strong></li>\n<li><strong>&gt;&gt;&gt;</strong></li>\n</ul>\n<h2 id=\"数学函数与常量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#数学函数与常量\" aria-hidden=\"true\">#</a> 数学函数与常量</h2>\n<ol>\n<li>计算一个数值的平方根</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// prints 2.0</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><ol start=\"2\">\n<li>一些三角函数</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>sin\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>cos\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>tan\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><ol start=\"3\">\n<li>指示函数</li>\n</ol>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>log\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"结合赋值的运算符\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#结合赋值的运算符\" aria-hidden=\"true\">#</a> 结合赋值的运算符</h2>\n<p>在Java中可以使用二元运算符，这是一种简写形式。</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>x <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//等价于</span>\nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">|=</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//等价于</span>\na <span class=\"token operator\">=</span> a <span class=\"token operator\">|</span> b<span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br></div></div><p>如果运算符得到一个值，其类型与左侧操作数的类型不同，会发生强制类型转换。</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nx <span class=\"token operator\">+=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//等价于</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><h2 id=\"括号与运算符级别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#括号与运算符级别\" aria-hidden=\"true\">#</a> 括号与运算符级别</h2>\n<ul>\n<li>如果不使用括号，就按照给出的运算符优先级次序进行计算。</li>\n<li>同一个级别的运算符按照从左到右的顺序进行计算（除了从右到左的运算符）</li>\n</ul>\n<p><strong>优先级从上到下</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">运算符</th>\n<th style=\"text-align:left\">结合性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">== !=</td>\n<td style=\"text-align:left\">从左向右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;</td>\n<td style=\"text-align:left\">从左向右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">^</td>\n<td style=\"text-align:left\">从左向右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">&amp;&amp;</td>\n<td style=\"text-align:left\">从左向右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">?:</td>\n<td style=\"text-align:left\"><strong>从右向左</strong></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">= += -= *= /= %= &amp;= ^= &lt;&lt;= &gt;&gt;= &gt;&gt;&gt;=</td>\n<td style=\"text-align:left\"><strong>从右向左</strong></td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>a <span class=\"token operator\">&amp;&amp;</span> b <span class=\"token operator\">||</span> c\n<span class=\"token comment\">// 等价于</span>\n<span class=\"token punctuation\">(</span>a <span class=\"token operator\">&amp;&amp;</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> c\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div><div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code>a <span class=\"token operator\">+=</span> b <span class=\"token operator\">+=</span>c\n<span class=\"token comment\">// 等价于</span>\na <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">+=</span> c<span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br></div></div>","export * from \"-!../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./operation.html.vue?vue&type=template&id=1bf9f055\"","import { ssrRender } from \"./operation.html.vue?vue&type=template&id=1bf9f055\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}