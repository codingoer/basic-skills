{"version":3,"file":"8674.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ECnDA;;;;;EAAA;EAAA;;;;;;;AEA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/index.html.js","webpack://notebook/./.temp/pages/java/index.html.vue","webpack://notebook/./.temp/pages/java/index.html.vue?0d11","webpack://notebook/./.temp/pages/java/index.html.vue?46c2","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-14c69af4\",\n  \"path\": \"/java/\",\n  \"title\": \"Java基础\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"异常\",\n      \"slug\": \"异常\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"异常1\",\n          \"slug\": \"异常1\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"异常2\",\n          \"slug\": \"异常2\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Java core\",\n      \"slug\": \"java-core\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"知识点分类\",\n      \"slug\": \"知识点分类\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"java基础\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#java基础\" aria-hidden=\"true\">#</a> Java基础</h1>\n<p>环境变量，jdk与jre的区别，jar包，rt.jar干嘛的，其他的jar呢，</p>\n<p>Java程序怎么跑起来的，编译与反编译，底层东西</p>\n<h2 id=\"异常\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异常\" aria-hidden=\"true\">#</a> 异常</h2>\n<p>form表单不能传数组，没有数组的概念，多个值就是数组。</p>\n<h3 id=\"异常1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异常1\" aria-hidden=\"true\">#</a> 异常1</h3>\n<h3 id=\"异常2\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#异常2\" aria-hidden=\"true\">#</a> 异常2</h3>\n<p>StringBuilder会把null加入进去</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nsb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>goods<span class=\"token punctuation\">.</span><span class=\"token function\">getSpecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>goods<span class=\"token punctuation\">.</span><span class=\"token function\">getModelNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>goods<span class=\"token punctuation\">.</span><span class=\"token function\">getForecastContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>输出结果\n<code>null null 0.33粒 </code></p>\n<p>枚举类会自动继承<code>Enum</code></p>\n<p>面向接口编程，扩展性高，不关心内部的实例</p>\n<p>继承的缺点？耦合太高，使用泛型</p>\n<p>泛型程序设计</p>\n<p>枚举类型的构造方法为什么不能加public</p>\n<p>Why can't enum constructors be protected or public in Java?</p>\n<p><a href=\"https://docs.oracle.com/en/java/\" target=\"_blank\" rel=\"noopener noreferrer\">Java Documentation<OutboundLink/></a></p>\n<p>面向接口编程，接口就是功能的<code>行为</code></p>\n<p>集合，线程，并发，锁，io等一定要深入到源码级别</p>\n<p>对象克隆，深克隆和浅克隆</p>\n<p>值传递和引用传递：值传递是基本数据类型，引用传递是对象</p>\n<p>Java基本类型，分类讲出来，逻辑清晰</p>\n<p>private protected public default</p>\n<p>Java多态：多态是同一个行为具有多个不同表现形式或形态的能力</p>\n<p>基本数据类型，自动拆箱，对象拆箱？</p>\n<p>动态编译，反射</p>\n<h2 id=\"java-core\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#java-core\" aria-hidden=\"true\">#</a> Java core</h2>\n<p>https://dzone.com/refcardz/core-java?chapter=2</p>\n<p>https://www.javatpoint.com/immutable-string</p>\n<h2 id=\"知识点分类\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#知识点分类\" aria-hidden=\"true\">#</a> 知识点分类</h2>\n<ul>\n<li>基础程序设计</li>\n</ul>\n<p>基本数据类型，变量，关键字，运算符，流程控制，数组，输入与输出，移位运算</p>\n<ul>\n<li>基本对象与类</li>\n</ul>\n<p>类的基础，private protected, 对象克隆，String类，StringBuilder，对象初始化流程，构造方法，静态代码块，方法块，类的特性，内部类，常用基础类，枚举类</p>\n<ul>\n<li>面向对象</li>\n</ul>\n<p>类，超类，子类，面向对象设计，接口，抽象类，面向接口编程，继承</p>\n<ul>\n<li>动态特性</li>\n</ul>\n<p>反射，类加载机制，代理，动态代理，静态代理，注解，编译器，反编译</p>\n<ul>\n<li>异常与日志</li>\n</ul>\n<p>异常分类，try catch，何时捕获何时抛出</p>\n<ul>\n<li>泛型程序设计</li>\n</ul>\n<p>泛型类，泛型类型的继承，通配符，反射和泛型</p>\n<ul>\n<li>集合</li>\n</ul>\n<p>Collection Map List，列表，队列</p>\n<ul>\n<li>I/O</li>\n</ul>\n<p>文件基础，BIO, NIO, AIO</p>\n<ul>\n<li>并发</li>\n</ul>\n<p>线程基本概念，并发包juc</p>\n<ul>\n<li>函数式编程</li>\n</ul>\n<p>jdk8, lambda表达式，function，stream</p>\n<ul>\n<li>\n<p>设计模式</p>\n</li>\n<li>\n<p>JVM</p>\n</li>\n<li>\n<p>如何做抽象，提高抽象能力</p>\n</li>\n<li>\n<p>JSR JCP</p>\n</li>\n</ul>\n<p>jsr303 Bean Validation\njsr380 Bean Validation 2.0</p>\n","export * from \"-!../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./index.html.vue?vue&type=template&id=c957974a\"","import { ssrRender } from \"./index.html.vue?vue&type=template&id=c957974a\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}