{"version":3,"file":"5251.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;EC1BA;;;;;ACA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/microservice/rpc/index.html.js","webpack://notebook/./.temp/pages/microservice/rpc/index.html.vue","webpack://notebook/./.temp/pages/microservice/rpc/index.html.vue?7c12","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-49226cef\",\n  \"path\": \"/microservice/rpc/\",\n  \"title\": \"RPC框架介绍\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"RPC与HTTP的区别\",\n      \"slug\": \"rpc与http的区别\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"microservice/rpc/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"rpc框架介绍\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#rpc框架介绍\" aria-hidden=\"true\">#</a> RPC框架介绍</h1>\n<h2 id=\"rpc与http的区别\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#rpc与http的区别\" aria-hidden=\"true\">#</a> RPC与HTTP的区别</h2>\n<p>微服务调用为啥要用rpc，http不是更简单吗</p>\n<p>服务之间的调用</p>\n<p>rpc的好处</p>\n<p>RPC主要用于公司内部的服务调用，性能消耗低，传输效率高，服务治理方便。HTTP主要用于对外的异构环境，浏览器接口调用，APP接口调用，第三方接口调用等。</p>\n<p>grpc上游服务超时,取消下游服务</p>\n","import { ssrRender } from \"./index.html.vue?vue&type=template&id=3362b508\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}