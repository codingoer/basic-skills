{"version":3,"file":"342.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECnBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0E;AAC1E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,iDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/distributed/transaction/index.html.js","webpack://notebook/./.temp/pages/distributed/transaction/index.html.vue","webpack://notebook/./.temp/pages/distributed/transaction/index.html.vue?8d93","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-5a881cf6\",\n  \"path\": \"/distributed/transaction/\",\n  \"title\": \"分布式事务\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [],\n  \"filePathRelative\": \"distributed/transaction/README.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"分布式事务\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#分布式事务\" aria-hidden=\"true\">#</a> 分布式事务</h1>\n<p>写代码，事务处理的原则，保证数据的一致性</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token class-name\">Long</span> postId <span class=\"token operator\">=</span> postCacheService<span class=\"token punctuation\">.</span><span class=\"token function\">saveCachePost</span><span class=\"token punctuation\">(</span>postCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npostEsService<span class=\"token punctuation\">.</span><span class=\"token function\">indexPost</span><span class=\"token punctuation\">(</span>postId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ntopicService<span class=\"token punctuation\">.</span><span class=\"token function\">operatePostCount</span><span class=\"token punctuation\">(</span>postCache<span class=\"token punctuation\">.</span><span class=\"token function\">getTopicId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npostCacheService<span class=\"token punctuation\">.</span><span class=\"token function\">deleteCachePost</span><span class=\"token punctuation\">(</span>postCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br></div></div><p>嵌套事务，是传递级别的吗？\n事务传递级别，事务隔离，</p>\n<p>savePost开启一个读写事务，一个线程过来了，获取楼层，然后楼层+1，这时候事务还没有提交，另一个线程又来了，这样会导致楼层出现重复情况。</p>\n<div class=\"custom-container warning\"><p class=\"custom-container-title\">WARNING</p>\n<p>注意代码第8行，帖子楼层数+1在分布式锁内部完成</p>\n</div>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token class-name\">Long</span> <span class=\"token function\">savePost</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Post</span> post<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> content<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">PostImageGoods</span><span class=\"token punctuation\">></span></span> imageGoodsList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> key <span class=\"token operator\">=</span> <span class=\"token string\">\"upload-post-\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Long</span> postId<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">AutoUnlock</span> ignored <span class=\"token operator\">=</span> <span class=\"token class-name\">LockUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">autoLock</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">+</span> post<span class=\"token punctuation\">.</span><span class=\"token function\">getTopicId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Topic</span> topic <span class=\"token operator\">=</span> topicService<span class=\"token punctuation\">.</span><span class=\"token function\">findByPropertyAndValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Topic</span><span class=\"token punctuation\">.</span>ID_PROPERTY<span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span><span class=\"token function\">getTopicId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        post<span class=\"token punctuation\">.</span><span class=\"token function\">setFloor</span><span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalFloor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        postId <span class=\"token operator\">=</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        topicService<span class=\"token punctuation\">.</span><span class=\"token function\">incre</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span><span class=\"token function\">getTopicId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Topic</span><span class=\"token punctuation\">.</span>TOTAL_FLOOR_PROPERTY<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ValidationRuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">StatusCode</span><span class=\"token punctuation\">.</span>CLIENT_ERROR_ACCESS_TOO_FREQUENTLY_CODE<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">StringUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        postContentService<span class=\"token punctuation\">.</span><span class=\"token function\">saveOrUpdate</span><span class=\"token punctuation\">(</span>postId<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isNotEmpty</span><span class=\"token punctuation\">(</span>imageGoodsList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        postImageService<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>postId<span class=\"token punctuation\">,</span> imageGoodsList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    topicService<span class=\"token punctuation\">.</span><span class=\"token function\">operatePostCount</span><span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span><span class=\"token function\">getTopicId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> postId<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre><div class=\"highlight-lines\"><br><br><br><br><br><br><br><div class=\"highlight-line\">&nbsp;</div><br><br><br><br><br><br><br><br><br><br><br><br><br></div><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br></div></div>","import { ssrRender } from \"./index.html.vue?vue&type=template&id=2d58fccc\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}