{"version":3,"file":"67.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECtCA;;;;;ACA+E;AAC/E;;AAEA,CAAgH;AAChH,iCAAiC,+BAAe,uBAAuB,SAAS;;AAEhF,sDAAe;;;;;;;;ACNF;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D;AACA;AACA,SAAe;AACf;AACA;AACA;AACA;AACA;AACA","sources":["webpack://notebook/./.temp/pages/java/oop/class-load.html.js","webpack://notebook/./.temp/pages/java/oop/class-load.html.vue","webpack://notebook/./.temp/pages/java/oop/class-load.html.vue?29f2","webpack://notebook/./node_modules/vue-loader/dist/exportHelper.js"],"sourcesContent":["export const data = {\n  \"key\": \"v-788874ab\",\n  \"path\": \"/java/oop/class-load.html\",\n  \"title\": \"类加载机制\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"类的信息\",\n      \"slug\": \"类的信息\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"类加载过程\",\n      \"slug\": \"类加载过程\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"内存空间\",\n      \"slug\": \"内存空间\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/oop/class-load.md\",\n  \"git\": {\n    \"updatedTime\": 1639064924000,\n    \"contributors\": [\n      {\n        \"name\": \"codingoer\",\n        \"email\": \"codingoer@163.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"类加载机制\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类加载机制\" aria-hidden=\"true\">#</a> 类加载机制</h1>\n<p><strong>类的加载是指将类的相关信息加载到内存，类是动态加载的，当第一次使用这个类的时候才会加载。加载一个类时，会看其父类是否已加载，如果没有，则会加载其父类。</strong></p>\n<h2 id=\"类的信息\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类的信息\" aria-hidden=\"true\">#</a> 类的信息</h2>\n<ul>\n<li>类变量（静态变量）</li>\n<li>类初始化代码\n<ul>\n<li>定义静态变量时的赋值语句</li>\n<li>静态初始化代码块</li>\n</ul>\n</li>\n<li>类方法（静态方法）</li>\n<li>实例变量</li>\n<li>实例初始化代码\n<ul>\n<li>定义实例变量时的赋值语句</li>\n<li>实例初始化代码块</li>\n<li>构造方法</li>\n</ul>\n</li>\n<li>实例方法</li>\n<li>父类信息引用</li>\n</ul>\n<h2 id=\"类加载过程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#类加载过程\" aria-hidden=\"true\">#</a> 类加载过程</h2>\n<ul>\n<li>分配内存保存类的信息</li>\n<li>给类变量赋默认值</li>\n<li>加载父类</li>\n<li>设置父子关系</li>\n<li>执行类初始化代码</li>\n</ul>\n<p><strong>类初始化代码是先执行父类的，再执行子类的。父类执行时，子类静态变量的值是默认值。</strong></p>\n<p><strong>加载一个类时，会看其父类是否已加载，如果没有，则会加载其父类。</strong></p>\n<h2 id=\"内存空间\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#内存空间\" aria-hidden=\"true\">#</a> 内存空间</h2>\n<ul>\n<li>栈</li>\n</ul>\n<p>存放函数的局部变量和引用</p>\n<ul>\n<li>堆</li>\n</ul>\n<p>存放动态分配的对象</p>\n<ul>\n<li>方法区</li>\n</ul>\n<p>存放类的信息</p>\n","import { ssrRender } from \"./class-load.html.vue?vue&type=template&id=3af24b1e\"\nconst script = {}\n\nimport exportComponent from \"/Users/lionel/VsCodeProjects/notebook/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['ssrRender',ssrRender]])\n\nexport default __exports__","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n"],"names":[],"sourceRoot":""}